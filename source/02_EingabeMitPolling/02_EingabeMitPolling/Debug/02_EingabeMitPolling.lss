
02_EingabeMitPolling.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000000f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000a2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000000f6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000128  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000168  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000069a  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000617  00000000  00000000  0000082a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000021a  00000000  00000000  00000e41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000105c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000341  00000000  00000000  00001090  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  000013d1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 46 00 	call	0x8c	; 0x8c <main>
  78:	0c 94 4f 00 	jmp	0x9e	; 0x9e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <init>:
#include <util/delay.h>

void init() {
	
	// PB5 als Ausgang
	DDRB |= 0b00100000;
  80:	25 9a       	sbi	0x04, 5	; 4
	
	// D2 und D3 als Eingang
	//CLEAR_BIT(DDRD, DDD2);
	//CLEAR_BIT(DDRD, DDD3);
	DDRD = 0;
  82:	1a b8       	out	0x0a, r1	; 10
	
	// Pullup für D2 und D3
	//SET_BIT(PORTD, PORTD2);
	//SET_BIT(PORTD, PORTD3);
	PORTD = 255;
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	8b b9       	out	0x0b, r24	; 11
	
	// BuildIn LED Off
	PORTB |= 1 << PINB5 ;
  88:	2d 9a       	sbi	0x05, 5	; 5
  8a:	08 95       	ret

0000008c <main>:
	
}

int main() {
	init();
  8c:	0e 94 40 00 	call	0x80	; 0x80 <init>
	while(1) {
		if ( ! (PIND & (1 << PIND2))) 
			PORTB = 0xFF;
  90:	8f ef       	ldi	r24, 0xFF	; 255
}

int main() {
	init();
	while(1) {
		if ( ! (PIND & (1 << PIND2))) 
  92:	4a 9b       	sbis	0x09, 2	; 9
			PORTB = 0xFF;
  94:	85 b9       	out	0x05, r24	; 5
			
		if ( ! (PIND & (1 << PIND3)))
  96:	4b 99       	sbic	0x09, 3	; 9
  98:	fc cf       	rjmp	.-8      	; 0x92 <main+0x6>
			PORTB = 0x00;
  9a:	15 b8       	out	0x05, r1	; 5
  9c:	fa cf       	rjmp	.-12     	; 0x92 <main+0x6>

0000009e <_exit>:
  9e:	f8 94       	cli

000000a0 <__stop_program>:
  a0:	ff cf       	rjmp	.-2      	; 0xa0 <__stop_program>
